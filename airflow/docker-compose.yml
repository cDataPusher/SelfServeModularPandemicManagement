version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data

  webserver:
    image: apache/airflow:2.6.2
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${SECRET_KEY}
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow_dag_data:/opt/airflow/airflow_dag_data
      - logs:/opt/airflow/logs
      - ./config/requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: >
      bash -c "pip install -r /requirements.txt &&
             airflow db init &&
              airflow users create --username airflow --password airflow --firstname John --lastname Doe --role Admin --email admin@example.com &&
              exec airflow webserver"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "[ -f /usr/local/airflow/airflow-webserver.pid ]"
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - default
      - superset_network

  scheduler:
    image: apache/airflow:2.6.2
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${SECRET_KEY}
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow_dag_data:/opt/airflow/airflow_dag_data
      - logs:/opt/airflow/logs
      - ./config/requirements.txt:/requirements.txt
    command: >
      bash -c "pip install -r /requirements.txt && sleep 10 && airflow scheduler"
    networks:
      - default
      - superset_network

volumes:
  postgres-data:
  airflow_dag_data:
  logs:


networks:
  superset_network:
    external: true
    name: superset_superset_network
